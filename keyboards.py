from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def get_main_inline_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÇ –ú–æ–∏ —Å—Å—ã–ª–∫–∏", callback_data="dummy_links")],
        [InlineKeyboardButton(text="‚ûñ –°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å—Å—ã–ª–∫—É", callback_data="dummy_shorten")]
    ])


def get_link_card_keyboard(link_id: int, title: str, long_url: str, short_url: str, created_at) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Å—ã–ª–∫–∏."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"stats_{link_id}")],
        [InlineKeyboardButton(text="‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", callback_data=f"rename_{link_id}")],
        [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{link_id}")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_links")]
    ])


def get_stats_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_from_stats")]
    ])


def get_delete_confirm_keyboard(link_id: int, title: str, short_url: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"delete_yes_{link_id}")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"delete_no_{link_id}")]
    ])


def get_rename_keyboard(link_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_rename")]
    ])


def get_pagination_keyboard(page: int, total_pages: int) -> tuple[list, InlineKeyboardMarkup]:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫."""
    buttons = []
    if page > 1:
        buttons.append(InlineKeyboardButton(text=f"‚óÄÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page - 1}", callback_data=f"page_{page - 1}"))
    buttons.append(InlineKeyboardButton(text=f"üìÑ {page} –∏–∑ {total_pages}", callback_data="noop"))
    if page < total_pages:
        buttons.append(InlineKeyboardButton(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1} ‚ñ∂Ô∏è", callback_data=f"page_{page + 1}"))
    keyboard = InlineKeyboardMarkup(inline_keyboard=[buttons]) if buttons else None
    return buttons, keyboard


def get_back_to_links_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É —Å—Å—ã–ª–æ–∫."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_links")]
    ])
