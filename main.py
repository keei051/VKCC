import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from config import BOT_TOKEN
from handlers import setup_handlers
from database import init_db  # ‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –±–µ–∑ await
from session import create_session, close_session

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK-—Å–µ—Å—Å–∏–∏
    await create_session()

    # –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    dp = Dispatcher()

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ–±—Ö—É–∫–∏ –∏ –¥—Ä–æ–ø–∞–µ–º –ø–æ–¥–≤–∏—Å—à–∏–µ –∞–ø–¥–µ–π—Ç—ã
    await bot.delete_webhook(drop_pending_updates=True)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    init_db()  # üü¢ –±–µ–∑ await

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
    setup_handlers(dp)

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã.")

    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: {e}")
    finally:
        await close_session()
        logger.info("HTTP-—Å–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞. –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")

if __name__ == "__main__":
    asyncio.run(main())
